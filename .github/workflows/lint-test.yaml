---
name: Lint & Test

on:
  workflow_dispatch:
  pull_request:

permissions:
  contents: write

jobs:
  lint_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: ${{ github.head_ref }}

      - name: Install uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231  # v5.3.1
        with:
          version: "0.5.4"

      - name: Install python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38  # v5.4.0
        with:
          python-version-file: "pyproject.toml"

      - name: Install project
        run: uv sync --all-extras --dev

      - name: Cache pre-commit hooks
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # 4.2.2
        env:
          cache-name: cache-pre-commit
        with:
          # https://pre-commit.com/#managing-ci-caches
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Run pre-commit
        run: uv run pre-commit run --all-files

      - name: Run pytest with coverage.py
        run: uv run coverage run -m pytest

      # this is very scuffed
      # https://github.com/actions/checkout?tab=readme-ov-file#push-a-commit-to-a-pr-using-the-built-in-token
      - name: Export and push coverage report
        run: |
          uv run coverage html
          rm -f documentation/static/htmlcov/.gitignore

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add -A
          if ! git diff-index --quiet HEAD; then
            git commit -m "Coverage report"
            git push
          fi
